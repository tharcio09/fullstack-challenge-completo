version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: challenge-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: challenge
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - challenge-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: challenge-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGO_URI: mongodb://admin:password123@mongodb:27017/challenge?authSource=admin
      PORT: 4000
    ports:
      - "4000:4000"
    depends_on:
      - mongodb
    networks:
      - challenge-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: challenge-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - challenge-network

  # Redis (opcional, para cache)
  redis:
    image: redis:7-alpine
    container_name: challenge-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - challenge-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  challenge-network:
    driver: bridge
